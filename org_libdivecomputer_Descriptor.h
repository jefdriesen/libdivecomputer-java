/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class org_libdivecomputer_Descriptor */

#ifndef _Included_org_libdivecomputer_Descriptor
#define _Included_org_libdivecomputer_Descriptor
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     org_libdivecomputer_Descriptor
 * Method:    Vendor
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_libdivecomputer_Descriptor_Vendor
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_libdivecomputer_Descriptor
 * Method:    Product
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_libdivecomputer_Descriptor_Product
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_libdivecomputer_Descriptor
 * Method:    Type
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_libdivecomputer_Descriptor_Type
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_libdivecomputer_Descriptor
 * Method:    Model
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_libdivecomputer_Descriptor_Model
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_libdivecomputer_Descriptor
 * Method:    Transports
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_libdivecomputer_Descriptor_Transports
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_libdivecomputer_Descriptor
 * Method:    Iterator
 * Signature: ()Ljava/util/List;
 */
JNIEXPORT jobject JNICALL Java_org_libdivecomputer_Descriptor_Iterator
  (JNIEnv *, jclass);

#ifdef __cplusplus
}
#endif
#endif
